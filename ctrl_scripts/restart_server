#!/usr/local/bin/perl

=head1 NAME

restart_server - script to restart an Ensembl server

=head1 SYNOPSIS

    ctrl_scripts/restart_server [-rXh] [-d N]

=head1 DESCRIPTION

This script calls ctrl_script/stop_server and ctrl_script/start_server
consecutively. Available options are:

    - delete conf/config.packed before restart
    - delayed restart (to allow shutdown of heavy servers)
    - start Apache in single server mode
    - tail error logs

Run 'ctrl_script/restart_server --help' for usage details.

=head1 LICENSE

Copyright [1999-2015] Wellcome Trust Sanger Institute and the EMBL-European Bioinformatics Institute

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=head1 AUTHOR

Patrick Meidl <pm2@sanger.ac.uk>

=head1 CONTACT

Post questions to the EnsEMBL development list dev@ensembl.org 

=cut

use strict;
use warnings;
no warnings 'uninitialized';

use File::Basename qw(dirname);
use FindBin qw($Bin);
use POSIX qw(strftime);
use Getopt::Long qw(:config no_ignore_case);

my $serverroot;

BEGIN {
  $serverroot = dirname($Bin);
  unshift @INC, "$serverroot/conf";
};

use SiteDefs;

if($SiteDefs::ENSEMBL_CTRLLOG && open(LOG, ">>$SiteDefs::ENSEMBL_CTRLLOG")) {
  print LOG sprintf "%s [005] begin restart cycle (manual invocation)\n", strftime("%Y-%m-%d %H:%M:%S", localtime);
  close LOG;
}

my ($help, $rmconfig, $delay, $single, $tail, $flush, $species,@defines);
&GetOptions(
  "sp=s"     => \$species,
  "rmconfig" => \$rmconfig,
  "r"        => \$rmconfig,
  "f"        => \$flush,
  "d|delay=i"  => \$delay,
  "X"        => \$single,
  "single"   => \$single,
  "help"     => \$help,
  "h"        => \$help,
  "t"        => \$tail,
  "taillog"  => \$tail,
  "D=s"      => \@defines,
);

if ($help) {
  print qq(Usage:
    ctrl_scripts/restart_server
        [-r|--rmconfig]
        [-d|--delay N]
        [-X|--single]
        [-h|--help]
        [-t|--taillog]
        [-sp=species_name,species_name|all]        

Options:
    -r, --rmconfig  : remove conf/config.packed before restarting the server
    -d N, --delay N : wait N seconds before restart \(to allow proper shutdown\)
    -X, --single    : start Apache in single server mode
    -h, --help      : print this help message
    -sp             : rm conf/packed/species_name.*, or rm conf/packed/* if -s eq all
    -t, --taillog   : end the command with ./ctrl/taillog
    -D              : extra defines for apache
);

  exit;
}

if ($species) {
  warn "SPECIES [$species]\n";
  
  if ($species eq 'all') {
    my $cmd = "rm $serverroot/conf/packed/\*";
    `$cmd`;
  } else {
    foreach my $sp (split /,/, $species) {
      my $f = "$serverroot/conf/packed/$sp.db.packed";
      
      if (-e $f) {
        `rm $f`;
        warn " Removed $f ....\n";
      } else {
        warn " WARNING: $sp not found ...\n";
      }
    }
  }
  
  my $rebuild = "$serverroot/utils/rebuild_conf";
  
  `$rebuild` if -e $rebuild;
}

my $defines = join(" ",map { "-D $_ " } @defines);
my $stop_args  = $delay ? "-d $delay" : '';
my $start_args = join ' ', $rmconfig ? '-r' : '', $single ? '-X' : '', $flush ? '-f' : '',$defines;
my $argv       = join ' ', @ARGV;

# stop and start the server
system("perl $Bin/stop_server $stop_args $argv")   == 0 or exit;
system("perl $Bin/start_server $start_args $argv") == 0 or exit;
warn "Restart OK.\n";

if ($tail) {
  system("$Bin/taillog") == 0 or exit;
}

if ($SiteDefs::ENSEMBL_CTRLLOG && open(LOG, ">>$SiteDefs::ENSEMBL_CTRLLOG")) {
  print LOG sprintf "%s [006] end restart cycle (manual invocation)\n", strftime("%Y-%m-%d %H:%M:%S", localtime);
  close LOG;
}

exit;
